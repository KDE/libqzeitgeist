/*
 * This file was generated by onto2cpp tool.
 * Command line was: onto2cpp [('-o', 'Interpretation')]

 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */


#ifndef QZEITGEIST_INTERPRETATION_H
#define QZEITGEIST_INTERPRETATION_H


namespace QZeitgeist
{


namespace Interpretation
{


namespace Event
{


/**
 * ZGAccessEvent
 *
 * Macro defining the Interpretation type <ulink url="http://www.zeitgeist-project.com/ontologies/2010/01/27/zg#AccessEvent">http://www.zeitgeist-project.com/ontologies/2010/01/27/zg&num;AccessEvent</ulink>
 *
 *	Event triggered by opening, accessing, or starting a resource. Most zg:AccessEvents will have an accompanying zg:LeaveEvent, but this need not always be the case.
 */
const char ZGAccessEvent[] = "http://www.zeitgeist-project.com/ontologies/2010/01/27/zg#AccessEvent";

/**
 * ZGCreateEvent
 *
 * Macro defining the Interpretation type <ulink url="http://www.zeitgeist-project.com/ontologies/2010/01/27/zg#CreateEvent">http://www.zeitgeist-project.com/ontologies/2010/01/27/zg&num;CreateEvent</ulink>
 *
 *	Event type triggered when an item is created.
 */
const char ZGCreateEvent[] = "http://www.zeitgeist-project.com/ontologies/2010/01/27/zg#CreateEvent";

/**
 * ZGDeleteEvent
 *
 * Macro defining the Interpretation type <ulink url="http://www.zeitgeist-project.com/ontologies/2010/01/27/zg#DeleteEvent">http://www.zeitgeist-project.com/ontologies/2010/01/27/zg&num;DeleteEvent</ulink>
 *
 *	Event triggered because a resource has been deleted or otherwise made permanently unavailable. Fx. when deleting a file. FIXME: How about when moving to trash?.
 */
const char ZGDeleteEvent[] = "http://www.zeitgeist-project.com/ontologies/2010/01/27/zg#DeleteEvent";

/**
 * ZGEventInterpretation
 *
 * Macro defining the Interpretation type <ulink url="http://www.zeitgeist-project.com/ontologies/2010/01/27/zg#EventInterpretation">http://www.zeitgeist-project.com/ontologies/2010/01/27/zg&num;EventInterpretation</ulink>
 *
 *	Base class for event interpretations. Please do no instantiate directly, but use one of the sub classes. The interpretation of an event describes 'what happened' - fx. 'something was created' or 'something was accessed'.
 */
const char ZGEventInterpretation[] = "http://www.zeitgeist-project.com/ontologies/2010/01/27/zg#EventInterpretation";

/**
 * ZGLeaveEvent
 *
 * Macro defining the Interpretation type <ulink url="http://www.zeitgeist-project.com/ontologies/2010/01/27/zg#LeaveEvent">http://www.zeitgeist-project.com/ontologies/2010/01/27/zg&num;LeaveEvent</ulink>
 *
 *	Event triggered by closing, leaving, or stopping a resource. Most zg:LeaveEvents will be following a zg:Access event, but this need not always be the case.
 */
const char ZGLeaveEvent[] = "http://www.zeitgeist-project.com/ontologies/2010/01/27/zg#LeaveEvent";

/**
 * ZGModifyEvent
 *
 * Macro defining the Interpretation type <ulink url="http://www.zeitgeist-project.com/ontologies/2010/01/27/zg#ModifyEvent">http://www.zeitgeist-project.com/ontologies/2010/01/27/zg&num;ModifyEvent</ulink>
 *
 *	Event triggered by modifying an existing resources. Fx. when editing and saving a file on disk or correcting a typo in the name of a contact.
 */
const char ZGModifyEvent[] = "http://www.zeitgeist-project.com/ontologies/2010/01/27/zg#ModifyEvent";

/**
 * ZGReceiveEvent
 *
 * Macro defining the Interpretation type <ulink url="http://www.zeitgeist-project.com/ontologies/2010/01/27/zg#ReceiveEvent">http://www.zeitgeist-project.com/ontologies/2010/01/27/zg&num;ReceiveEvent</ulink>
 *
 *	Event triggered when something is received from an external party. The event manifestation must be set according to the world view of the receiving party. Most often the item that is being received will be some sort of message - an email, instant message, or broadcasted media such as micro blogging.
 */
const char ZGReceiveEvent[] = "http://www.zeitgeist-project.com/ontologies/2010/01/27/zg#ReceiveEvent";

/**
 * ZGSendEvent
 *
 * Macro defining the Interpretation type <ulink url="http://www.zeitgeist-project.com/ontologies/2010/01/27/zg#SendEvent">http://www.zeitgeist-project.com/ontologies/2010/01/27/zg&num;SendEvent</ulink>
 *
 *	Event triggered when something is send to an external party. The event manifestation must be set according to the world view of the sending party. Most often the item that is being send will be some sort of message - an email, instant message, or broadcasted media such as micro blogging.
 */
const char ZGSendEvent[] = "http://www.zeitgeist-project.com/ontologies/2010/01/27/zg#SendEvent";


};

namespace Subject
{


/**
 * NCALAlarm
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/04/02/ncal#Alarm">http://www.semanticdesktop.org/ontologies/2007/04/02/ncal&num;Alarm</ulink>
 *
 *	Provide a grouping of component properties that define an alarm.
 */
const char NCALAlarm[] = "http://www.semanticdesktop.org/ontologies/2007/04/02/ncal#Alarm";

/**
 * NCALCalendar
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/04/02/ncal#Calendar">http://www.semanticdesktop.org/ontologies/2007/04/02/ncal&num;Calendar</ulink>
 *
 *	A calendar. Inspirations for this class can be traced to the VCALENDAR component defined in RFC 2445 sec. 4.4, but it may just as well be used to represent any kind of Calendar.
 */
const char NCALCalendar[] = "http://www.semanticdesktop.org/ontologies/2007/04/02/ncal#Calendar";

/**
 * NCALEvent
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/04/02/ncal#Event">http://www.semanticdesktop.org/ontologies/2007/04/02/ncal&num;Event</ulink>
 *
 *	Provide a grouping of component properties that describe an event.
 */
const char NCALEvent[] = "http://www.semanticdesktop.org/ontologies/2007/04/02/ncal#Event";

/**
 * NCALFreebusy
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/04/02/ncal#Freebusy">http://www.semanticdesktop.org/ontologies/2007/04/02/ncal&num;Freebusy</ulink>
 *
 *	Provide a grouping of component properties that describe either a request for free/busy time, describe a response to a request for free/busy time or describe a published set of busy time.
 */
const char NCALFreebusy[] = "http://www.semanticdesktop.org/ontologies/2007/04/02/ncal#Freebusy";

/**
 * NCALJournal
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/04/02/ncal#Journal">http://www.semanticdesktop.org/ontologies/2007/04/02/ncal&num;Journal</ulink>
 *
 *	Provide a grouping of component properties that describe a journal entry.
 */
const char NCALJournal[] = "http://www.semanticdesktop.org/ontologies/2007/04/02/ncal#Journal";

/**
 * NCALTimezone
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/04/02/ncal#Timezone">http://www.semanticdesktop.org/ontologies/2007/04/02/ncal&num;Timezone</ulink>
 *
 *	Provide a grouping of component properties that defines a time zone.
 */
const char NCALTimezone[] = "http://www.semanticdesktop.org/ontologies/2007/04/02/ncal#Timezone";

/**
 * NCALTodo
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/04/02/ncal#Todo">http://www.semanticdesktop.org/ontologies/2007/04/02/ncal&num;Todo</ulink>
 *
 *	Provide a grouping of calendar properties that describe a to-do.
 */
const char NCALTodo[] = "http://www.semanticdesktop.org/ontologies/2007/04/02/ncal#Todo";

/**
 * NFOApplication
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Application">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Application</ulink>
 *
 *	An application.
 */
const char NFOApplication[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Application";

/**
 * NFOArchive
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Archive">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Archive</ulink>
 *
 *	A compressed file. May contain other files or folder inside.
 */
const char NFOArchive[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Archive";

/**
 * NFOAudio
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Audio">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Audio</ulink>
 *
 *	A file containing audio content.
 */
const char NFOAudio[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Audio";

/**
 * NFOBookmark
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Bookmark">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Bookmark</ulink>
 *
 *	A bookmark of a webbrowser. Use nie:title for the name/label, nie:contentCreated to represent the date when the user added the bookmark, and nie:contentLastModified for modifications. nfo:bookmarks to store the link.
 */
const char NFOBookmark[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Bookmark";

/**
 * NFOBookmarkFolder
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#BookmarkFolder">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;BookmarkFolder</ulink>
 *
 *	A folder with bookmarks of a webbrowser. Use nfo:containsBookmark to relate Bookmarks. Folders can contain subfolders, use containsBookmarkFolder to relate them.
 */
const char NFOBookmarkFolder[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#BookmarkFolder";

/**
 * NFOCursor
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Cursor">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Cursor</ulink>
 *
 *	A Cursor.
 */
const char NFOCursor[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Cursor";

/**
 * NFODataContainer
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#DataContainer">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;DataContainer</ulink>
 *
 *	A superclass for all entities, whose primary purpose is to serve as containers for other data object. They usually don't have any "meaning" by themselves. Examples include folders, archives and optical disc images.
 */
const char NFODataContainer[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#DataContainer";

/**
 * NFODocument
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Document">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Document</ulink>
 *
 *	A generic document. A common superclass for all documents on the desktop.
 */
const char NFODocument[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Document";

/**
 * NFOExecutable
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Executable">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Executable</ulink>
 *
 *	An executable file.
 */
const char NFOExecutable[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Executable";

/**
 * NFOFilesystem
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Filesystem">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Filesystem</ulink>
 *
 *	A filesystem. Examples of filesystems include hard disk partitions, removable media, but also images thereof stored in files.
 */
const char NFOFilesystem[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Filesystem";

/**
 * NFOFilesystemImage
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#FilesystemImage">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;FilesystemImage</ulink>
 *
 *	An image of a filesystem. Instances of this class may include CD images, DVD images or hard disk partition images created by various pieces of software (e.g. Norton Ghost).
 */
const char NFOFilesystemImage[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#FilesystemImage";

/**
 * NFOFolder
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Folder">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Folder</ulink>
 *
 *	A folder/directory. Examples of folders include folders on a filesystem and message folders in a mailbox.
 */
const char NFOFolder[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Folder";

/**
 * NFOFont
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Font">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Font</ulink>
 *
 *	A font.
 */
const char NFOFont[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Font";

/**
 * NFOHtmlDocument
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#HtmlDocument">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;HtmlDocument</ulink>
 *
 *	A HTML document, may contain links to other files.
 */
const char NFOHtmlDocument[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#HtmlDocument";

/**
 * NFOIcon
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Icon">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Icon</ulink>
 *
 *	An Icon (regardless of whether it's a raster or a vector icon. A resource representing an icon could have two types (Icon and Raster, or Icon and Vector) if required.
 */
const char NFOIcon[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Icon";

/**
 * NFOImage
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Image">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Image</ulink>
 *
 *	A file containing an image.
 */
const char NFOImage[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Image";

/**
 * NFOMedia
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Media">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Media</ulink>
 *
 *	A piece of media content. This class may be used to express complex media containers with many streams of various media content (both aural and visual).
 */
const char NFOMedia[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Media";

/**
 * NFOMediaList
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#MediaList">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;MediaList</ulink>
 *
 *	A file containing a list of media files.e.g. a playlist.
 */
const char NFOMediaList[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#MediaList";

/**
 * NFOMindMap
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#MindMap">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;MindMap</ulink>
 *
 *	A MindMap, created by a mind-mapping utility. Examples might include FreeMind or mind mapper.
 */
const char NFOMindMap[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#MindMap";

/**
 * NFOOperatingSystem
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#OperatingSystem">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;OperatingSystem</ulink>
 *
 *	An OperatingSystem.
 */
const char NFOOperatingSystem[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#OperatingSystem";

/**
 * NFOPaginatedTextDocument
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#PaginatedTextDocument">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;PaginatedTextDocument</ulink>
 *
 *	A file containing a text document, that is unambiguously divided into pages. Examples might include PDF, DOC, PS, DVI etc.
 */
const char NFOPaginatedTextDocument[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#PaginatedTextDocument";

/**
 * NFOPlainTextDocument
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#PlainTextDocument">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;PlainTextDocument</ulink>
 *
 *	A file containing plain text (ASCII, Unicode or other encodings). Examples may include TXT, HTML, XML, program source code etc.
 */
const char NFOPlainTextDocument[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#PlainTextDocument";

/**
 * NFOPresentation
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Presentation">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Presentation</ulink>
 *
 *	A Presentation made by some presentation software (Corel Presentations, OpenOffice Impress, MS Powerpoint etc.).
 */
const char NFOPresentation[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Presentation";

/**
 * NFORasterImage
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#RasterImage">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;RasterImage</ulink>
 *
 *	A raster image.
 */
const char NFORasterImage[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#RasterImage";

/**
 * NFOSoftware
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Software">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Software</ulink>
 *
 *	A piece of software. Examples may include applications and the operating system. This interpretation most commonly applies to SoftwareItems.
 */
const char NFOSoftware[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Software";

/**
 * NFOSourceCode
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#SourceCode">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;SourceCode</ulink>
 *
 *	Code in a compilable or interpreted programming language.
 */
const char NFOSourceCode[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#SourceCode";

/**
 * NFOSpreadsheet
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Spreadsheet">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Spreadsheet</ulink>
 *
 *	A spreadsheet, created by a spreadsheet application. Examples might include Gnumeric, OpenOffice Calc or MS Excel.
 */
const char NFOSpreadsheet[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Spreadsheet";

/**
 * NFOTextDocument
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#TextDocument">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;TextDocument</ulink>
 *
 *	A text document.
 */
const char NFOTextDocument[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#TextDocument";

/**
 * NFOTrash
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Trash">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Trash</ulink>
 *
 *	Represents a container for deleted files, a feature common in modern operating systems.
 */
const char NFOTrash[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Trash";

/**
 * NFOVectorImage
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#VectorImage">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;VectorImage</ulink>
 *
 *	.
 */
const char NFOVectorImage[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#VectorImage";

/**
 * NFOVideo
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Video">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Video</ulink>
 *
 *	A video file.
 */
const char NFOVideo[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Video";

/**
 * NFOVisual
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Visual">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Visual</ulink>
 *
 *	File containing visual content.
 */
const char NFOVisual[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Visual";

/**
 * NFOWebsite
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Website">http://www.semanticdesktop.org/ontologies/2007/03/22/nfo&num;Website</ulink>
 *
 *	A website, usually a container for remote resources, that may be interpreted as HTMLDocuments, images or other types of content.
 */
const char NFOWebsite[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#Website";

/**
 * NMMMovie
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#Movie">http://www.semanticdesktop.org/ontologies/2009/02/19/nmm&num;Movie</ulink>
 *
 *	A Movie.
 */
const char NMMMovie[] = "http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#Movie";

/**
 * NMMMusicAlbum
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#MusicAlbum">http://www.semanticdesktop.org/ontologies/2009/02/19/nmm&num;MusicAlbum</ulink>
 *
 *	The music album as provided by the publisher. Not to be confused with media lists or collections.
 */
const char NMMMusicAlbum[] = "http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#MusicAlbum";

/**
 * NMMMusicPiece
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#MusicPiece">http://www.semanticdesktop.org/ontologies/2009/02/19/nmm&num;MusicPiece</ulink>
 *
 *	Used to assign music-specific properties such a BPM to video and audio.
 */
const char NMMMusicPiece[] = "http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#MusicPiece";

/**
 * NMMTVSeries
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#TVSeries">http://www.semanticdesktop.org/ontologies/2009/02/19/nmm&num;TVSeries</ulink>
 *
 *	A TV Series has multiple seasons and episodes.
 */
const char NMMTVSeries[] = "http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#TVSeries";

/**
 * NMMTVShow
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#TVShow">http://www.semanticdesktop.org/ontologies/2009/02/19/nmm&num;TVShow</ulink>
 *
 *	A TV Show.
 */
const char NMMTVShow[] = "http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#TVShow";

/**
 * NMOEmail
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#Email">http://www.semanticdesktop.org/ontologies/2007/03/22/nmo&num;Email</ulink>
 *
 *	An email.
 */
const char NMOEmail[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#Email";

/**
 * NMOIMMessage
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#IMMessage">http://www.semanticdesktop.org/ontologies/2007/03/22/nmo&num;IMMessage</ulink>
 *
 *	A message sent with Instant Messaging software.
 */
const char NMOIMMessage[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#IMMessage";

/**
 * NMOMailbox
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#Mailbox">http://www.semanticdesktop.org/ontologies/2007/03/22/nmo&num;Mailbox</ulink>
 *
 *	A mailbox - container for MailboxDataObjects.
 */
const char NMOMailbox[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#Mailbox";

/**
 * NMOMessage
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#Message">http://www.semanticdesktop.org/ontologies/2007/03/22/nmo&num;Message</ulink>
 *
 *	A message. Could be an email, instant messanging message, SMS message etc.
 */
const char NMOMessage[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#Message";

/**
 * NMOMimeEntity
 *
 * Macro defining the Interpretation type <ulink url="http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#MimeEntity">http://www.semanticdesktop.org/ontologies/2007/03/22/nmo&num;MimeEntity</ulink>
 *
 *	A MIME entity, as defined in RFC2045, Section 2.4.
 */
const char NMOMimeEntity[] = "http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#MimeEntity";


};


};


};

#endif // QZEITGEIST_INTERPRETATION_H
