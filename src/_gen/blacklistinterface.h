/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -p blacklistinterface.h: ../xml/org.gnome.zeitgeist.Blacklist.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef BLACKLISTINTERFACE_H_1292020236
#define BLACKLISTINTERFACE_H_1292020236

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

#include "QtZeitgeist/DataModel/Event"

/*
 * Proxy class for interface org.gnome.zeitgeist.Blacklist
 */
class OrgGnomeZeitgeistBlacklistInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.gnome.zeitgeist.Blacklist"; }

public:
    OrgGnomeZeitgeistBlacklistInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgGnomeZeitgeistBlacklistInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QtZeitgeist::DataModel::EventList> GetBlacklist()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetBlacklist"), argumentList);
    }

    inline QDBusPendingReply<> SetBlacklist(const QtZeitgeist::DataModel::EventList &events)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(events);
        return asyncCallWithArgumentList(QLatin1String("SetBlacklist"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace gnome {
    namespace zeitgeist {
      typedef ::OrgGnomeZeitgeistBlacklistInterface Blacklist;
    }
  }
}
#endif
