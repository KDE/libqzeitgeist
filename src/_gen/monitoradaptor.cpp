/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -i monitoradaptor.h -i QtZeitgeist/DataModel/Event -i QtZeitgeist/DataModel/TimeRange -a :monitoradaptor.cpp ../xml/org.gnome.zeitgeist.Monitor.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "monitoradaptor.h"
#include "QtZeitgeist/DataModel/Event"
#include "QtZeitgeist/DataModel/TimeRange"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class MonitorAdaptor
 */

MonitorAdaptor::MonitorAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

MonitorAdaptor::~MonitorAdaptor()
{
    // destructor
}

void MonitorAdaptor::NotifyDelete(const QtZeitgeist::DataModel::TimeRange &time_range, const QtZeitgeist::DataModel::EventIdList &event_ids)
{
    // handle method call org.gnome.zeitgeist.Monitor.NotifyDelete
    QMetaObject::invokeMethod(parent(), "NotifyDelete", Q_ARG(QtZeitgeist::DataModel::TimeRange, time_range), Q_ARG(QtZeitgeist::DataModel::EventIdList, event_ids));
}

void MonitorAdaptor::NotifyInsert(const QtZeitgeist::DataModel::TimeRange &time_range, const QtZeitgeist::DataModel::EventList &events)
{
    // handle method call org.gnome.zeitgeist.Monitor.NotifyInsert
    QMetaObject::invokeMethod(parent(), "NotifyInsert", Q_ARG(QtZeitgeist::DataModel::TimeRange, time_range), Q_ARG(QtZeitgeist::DataModel::EventList, events));
}

